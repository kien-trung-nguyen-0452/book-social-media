services:
  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - frere_redis_data:/data
    restart: unless-stopped
    command: [ "redis-server", "--appendonly", "yes" ]
    networks:
      - api-network

  redisinsight:
    image: redis/redisinsight:latest
    container_name: redisinsight
    ports:
      - "8001:8001"
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - api-network

  neo4j:
    image: neo4j:5.17  # hoặc dùng latest: neo4j:latest
    container_name: neo4j
    hostname: neo4j
    ports:
      - "7474:7474"   # HTTP - Neo4j Browser
      - "7687:7687"   # Bolt - cho Spring Boot kết nối
    environment:
      NEO4J_AUTH: neo4j/123456789  # username/password
      NEO4J_PLUGINS: '["apoc"]'    # bật APOC nếu cần
      NEO4J_dbms_security_procedures_unrestricted: 'apoc.*,algo.*'
      NEO4J_dbms_default__listen__address: 0.0.0.0
    volumes:
      - frere_neo4j_data:/data
    restart: always
    networks:
      - api-network

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    hostname: kafka
    ports:
      - '9092:9092'
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093,EXTERNAL://0.0.0.0:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - api-network
    restart: always

  elasticsearch:
    image: bitnami/elasticsearch:latest
    container_name: elasticsearch
    environment:
      - ELASTICSEARCH_ENABLE_SECURITY=false       # Tắt security cho dev/test
    ports:
      - "9200:9200"                                # REST API
      - "9300:9300"                                # Transport layer
    volumes:
      - frere_elasticsearch_data:/bitnami/elasticsearch
    networks:
      - api-network
    restart: always


  api-gateway:
    build:
      context: ./api-gateway
    container_name: gateway
    ports:
      - "8888:8888"
    networks:
      - api-network
    depends_on:
      - eureka-server

  eureka-server:
    build:
      context: ./discovery-service
    container_name: eureka
    ports:
      - "8761:8761"
    networks:
      - api-network
    restart: always

  mysql-db:
    image: mysql:8.0
    container_name: frere-mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: frere_db
    ports:
      - "3307:3306"
    volumes:
      - frere_mysql_data:/var/lib/mysql
    networks:
      - api-network

  mongodb:
    image: mongo:6.0
    container_name: frere-mongo-db
    ports:
      - "27018:27017"
    networks:
      - api-network
    volumes:
      - frere_mongo_data:/data/db

  auth-service:
    build: ./auth-service
    container_name: auth
    ports:
      - "8080:8080"
    environment:
      JWT_SIGNER_KEY: ${JWT_SIGNER_KEY}
      JWT_VALID_DURATION: ${JWT_VALID_DURATION}
      JWT_REFRESHABLE_DURATION: ${JWT_REFRESHABLE_DURATION}
      EUREKA_SERVER_URL: ${EUREKA_SERVER_URL}
      DBMS_CONNECTION: ${DBMS_CONNECTION}
      DBMS_USERNAME:  ${DBMS_USERNAME}
      DBMS_PASSWORD: ${DBMS_PASSWORD}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    depends_on:
      - mysql-db
      - eureka-server
    networks:
      - api-network

  book-service:
    build:
      context: ./book-service
    container_name: book
    depends_on:
      - mongodb
      - eureka-server
      - api-gateway
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/frere_db
    ports:
      - "8086:8086"
    networks:
      - api-network


  chapter-service:
    build:
      context: ./chapter-service
    depends_on:
      - mongodb
      - eureka-server
      - api-gateway
    networks:
      - api-network
    environment:

      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/frere_db
    ports:
      - "8087:8087"

  comment-service:
    build:
      context: ./comment-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_DATABASE=comment_db
    depends_on:
      - mongodb
      - eureka-server
      - api-gateway
    networks:
      - api-network

  crawl-service:
    build:
      context: ./crawl-service
    networks:
      - api-network
    ports:
      - "8082:8082"

  upload-service:
    build:
      context: ./upload-service
    networks:
      - api-network
    ports:
      - "8085:8085"
    depends_on:
      - api-gateway
      - eureka-server


  search-service:
    build:
      context: ./search-service
    depends_on:
      - eureka-server
      - elasticsearch
    networks:
      - api-network
    ports:
      - "8090:8090"

volumes:
  frere_redis_data:
    driver: local
  frere_mysql_data:
    driver: local
  frere_mongo_data:
    driver: local
  frere_elasticsearch_data:
    driver: local
  frere_neo4j_data:
    driver: local
networks:
  api-network:
    driver: bridge

